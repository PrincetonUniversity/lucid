/** Declare a class and any arguments to it **/
class Foo<<'a>>(int size) {
  // Declare any globals the class uses
  // Probably use public/private keywords to control access to stuff
  private global arr1 = new Array<<'a>>(size);
  private global arr2 = new Array<<'a>>(size);

  public event setCond(int idx, int<<'a>> data);
  private event setCond2(int idx, int<<'a>> data);

  /** Functions and events have to typecheck in the context of the class **/

  // Functions for simple computation
  // Externally, if the object is number 3, this has effect-type 3 -> 4
  public fun void setBoth(int idx, int<<'a>> data) {
    Array.set(arr1, idx, data);
    Array.set(arr2, idx, data);
  }

  // Events for complicated things that need recirculation
  handler event setCond(int idx, int<<'a>> data) {
    int x = Array.get(arr1, idx);
    if (x = 3) {
      Array.set(arr2, idx, data);
    } else {
      int y = Array.get(arr2, idx);
      if (y = x) {
        generate setCond2(idx, data);
      }
    }
  }

  handler event setCond2(int idx, int<<'a>> data) {
    Array.set(arr1, idx, data);
  }
}

/** Usage **/

global foo = new Foo<<32>>(16);

handle packetin(...) {
  if(...) {
    foo.setBoth(3, 7);
  } else {
    generate foo.setCond(5, 8);
  }
}
