entry event DNS_packet_fwd(int<<32>> DNS_packet_fwd_sip,int<<32>> DNS_packet_fwd_cip,int<<32>> DNS_packet_fwd_smac,int<<32>> DNS_packet_fwd_cmac,int<<32>> DNS_packet_fwd_ttl);
event DNS_packet_out(int<<32>> DNS_packet_out_sip,int<<32>> DNS_packet_out_cip,int<<32>> DNS_packet_out_smac,int<<32>> DNS_packet_out_cmac,int<<32>> DNS_packet_out_ttl);
event ttl_changes_found(int<<32>> ttl_changes_found_idx,int<<8>> ttl_changes_found_count);
global Array.t<<32>> assigned_var_mysrefst_ttl = Array.create(8);

global Array.t<<8>> mysre = Array.create(8);

memop mysrememop0(int<<8>> memval,int<<8>> f,int<<8>> g)
 {{
b1=(b1,memval+g<2);
b2=(b2,g==8)
cell1=(b1||b2 -> 8|memval), (!b1&&!b2 -> f+8)
cell2=None, None

ret=(true -> cell1)
}}
memop mysrememop2(int<<8>> memval,int<<8>> f,int<<8>> g)
 {{
b1=(b1,memval+f<8);
b2=(b2,memval+0<1)
cell1=(b1||b2 -> g^^memval), (!b1&&!b2 -> f+8)
cell2=None, None

ret=(true -> cell1)
}}
event mysrereset(int<<32>> mysrereset_mysreidx);
handle DNS_packet_out(int<<32>> DNS_packet_out_sip,int<<32>> DNS_packet_out_cip,int<<32>> DNS_packet_out_smac,int<<32>> DNS_packet_out_cmac,int<<32>> DNS_packet_out_ttl) {

}
handle ttl_changes_found(int<<32>> ttl_changes_found_idx,int<<8>> ttl_changes_found_count) {

}
handle mysrereset(int<<32>> mysrereset_mysreidx) {

}
handle DNS_packet_fwd(int<<32>> DNS_packet_fwd_sip,int<<32>> DNS_packet_fwd_cip,int<<32>> DNS_packet_fwd_smac,int<<32>> DNS_packet_fwd_cmac,int<<32>> DNS_packet_fwd_ttl) {

}
// shared locals:
int<<32>> mysre_idx_1590;
int<<32>> assigned_var_mysrefst_ttl_idx_1589;
// MAIN HANDLER 
handler main(...){
// Stage 0
match event_id with 
| 2 -> {
labeledstmt_1();
}
| 3 -> {
labeledstmt_2();
}
| 4 -> {
labeledstmt_3();
}
| 1 -> {
labeledstmt_4();
}
| _ -> {
labeledstmt_5();
}
// Stage 1
match event_id with 
| 2 -> {
labeledstmt_6();
}
| 3 -> {
labeledstmt_6();
}
| 4 -> {
labeledstmt_7();
}
| 1 -> {
labeledstmt_8();
}
| _ -> {
labeledstmt_6();
}
// Stage 2
match event_id with 
| 2 -> {
labeledstmt_9();
}
| 3 -> {
labeledstmt_9();
}
| 4 -> {
labeledstmt_10();
}
| 1 -> {
labeledstmt_11();
}
| _ -> {
labeledstmt_9();
}
// Stage 3
match event_id with 
| 2 -> {
labeledstmt_12();
}
| 3 -> {
labeledstmt_12();
}
| 4 -> {
labeledstmt_12();
}
| 1 -> {
labeledstmt_13();
}
| _ -> {
labeledstmt_12();
}
// Stage 4
match (event_id,if_precomp) with 
| 2,0 -> {
labeledstmt_14();
}
| 3,0 -> {
labeledstmt_14();
}
| 4,0 -> {
labeledstmt_14();
}
| 1,0 -> {
labeledstmt_15();
}
| 2,_ -> {
labeledstmt_14();
}
| 3,_ -> {
labeledstmt_14();
}
| 4,_ -> {
labeledstmt_14();
}
| 1,_ -> {
labeledstmt_16();
}
| _,_ -> {
labeledstmt_14();
}
// Stage 5
match (if_precomp,event_id) with 
| 0,2 -> {
labeledstmt_17();
}
| 0,3 -> {
labeledstmt_17();
}
| 0,4 -> {
labeledstmt_17();
}
| 0,1 -> {
labeledstmt_17();
}
| _,2 -> {
labeledstmt_17();
}
| _,3 -> {
labeledstmt_17();
}
| _,4 -> {
labeledstmt_17();
}
| _,1 -> {
labeledstmt_18();
}
| _,_ -> {
labeledstmt_17();
}
// Stage 6
match (countermysre,event_id) with 
| 1,2 -> {
labeledstmt_19();
}
| 1,3 -> {
labeledstmt_19();
}
| 1,4 -> {
labeledstmt_19();
}
| 1,1 -> {
labeledstmt_20();
}
| 0,2 -> {
labeledstmt_19();
}
| 0,3 -> {
labeledstmt_19();
}
| 0,4 -> {
labeledstmt_19();
}
| 0,1 -> {
labeledstmt_21();
}
| _,2 -> {
labeledstmt_19();
}
| _,3 -> {
labeledstmt_19();
}
| _,4 -> {
labeledstmt_19();
}
| _,1 -> {
labeledstmt_19();
}
| _,_ -> {
labeledstmt_19();
}
// Stage 7
match (memop_synthesized_meta_varmysre,event_id) with 
| 0,2 -> {
labeledstmt_22();
}
| 0,3 -> {
labeledstmt_22();
}
| 0,4 -> {
labeledstmt_22();
}
| 0,1 -> {
labeledstmt_23();
}
| 2,2 -> {
labeledstmt_22();
}
| 2,3 -> {
labeledstmt_22();
}
| 2,4 -> {
labeledstmt_22();
}
| 2,1 -> {
labeledstmt_24();
}
| _,2 -> {
labeledstmt_22();
}
| _,3 -> {
labeledstmt_22();
}
| _,4 -> {
labeledstmt_22();
}
| _,1 -> {
labeledstmt_22();
}
| _,_ -> {
labeledstmt_22();
}
// Stage 8
match (event_id,memop_synthesized_meta_varmysre) with 
| 2,0 -> {
labeledstmt_25();
}
| 3,0 -> {
labeledstmt_25();
}
| 4,0 -> {
labeledstmt_26();
}
| 1,0 -> {
labeledstmt_27();
}
| 2,2 -> {
labeledstmt_25();
}
| 3,2 -> {
labeledstmt_25();
}
| 4,2 -> {
labeledstmt_26();
}
| 1,2 -> {
labeledstmt_28();
}
| 2,_ -> {
labeledstmt_25();
}
| 3,_ -> {
labeledstmt_25();
}
| 4,_ -> {
labeledstmt_26();
}
| _,_ -> {
labeledstmt_25();
}
// Stage 9
match (resmysre1279,event_id) with 
| 181,2 -> {
labeledstmt_29();
}
| 181,3 -> {
labeledstmt_29();
}
| 181,4 -> {
labeledstmt_29();
}
| 181,1 -> {
labeledstmt_30();
}
| _,2 -> {
labeledstmt_29();
}
| _,3 -> {
labeledstmt_29();
}
| _,4 -> {
labeledstmt_29();
}
| _,1 -> {
labeledstmt_31();
}
| _,_ -> {
labeledstmt_29();
}
// Stage 10
match (ansmysre,event_id) with 
| 1,2 -> {
labeledstmt_32();
}
| 1,3 -> {
labeledstmt_32();
}
| 1,4 -> {
labeledstmt_32();
}
| 1,1 -> {
labeledstmt_33();
}
| _,2 -> {
labeledstmt_32();
}
| _,3 -> {
labeledstmt_32();
}
| _,4 -> {
labeledstmt_32();
}
| _,1 -> {
labeledstmt_32();
}
| _,_ -> {
labeledstmt_32();
}
// Stage 11
match event_id with 
| 2 -> {
labeledstmt_34();
}
| 3 -> {
labeledstmt_34();
}
| 4 -> {
labeledstmt_34();
}
| 1 -> {
labeledstmt_35();
}
| _ -> {
labeledstmt_34();
}}
memop re12351sdaCheckThenSet(int<<32>> memval,int<<32>> newval,int<<32>> unused_1588)
 {{
b1=None;
b2=(mbool_1587,memval==0)
cell1=None, None
cell2=(mbool_1587 -> newval), (!mbool_1587 -> memval)

ret=(true -> cell2)
}}
memop set_1586(int<<8>> mem_val_1585,int<<8>> new_val_1583,int<<8>> unused_1584)
 {{
b1=None;
b2=None
cell1=(true -> new_val_1583), None
cell2=None, None

ret=None
}}
memop set_1582(int<<32>> mem_val_1581,int<<32>> new_val_1579,int<<32>> unused_1580)
 {{
b1=None;
b2=None
cell1=(true -> new_val_1579), None
cell2=None, None

ret=None
}}
labeled_statement labeledstmt_36{
Sys.invalidate.DNS_packet_out(DNS_packet_out_sip,DNS_packet_out_cip,DNS_packet_out_smac,DNS_packet_out_cmac,DNS_packet_out_ttl);
}
labeled_statement labeledstmt_1{
labeledstmt_36();
}
labeled_statement labeledstmt_37{
Sys.invalidate.ttl_changes_found(ttl_changes_found_idx,ttl_changes_found_count);
}
labeled_statement labeledstmt_2{
labeledstmt_37();
}
labeled_statement labeledstmt_39{
mysre_idx_1590 = mysrereset_mysreidx;
}
labeled_statement labeledstmt_38{
assigned_var_mysrefst_ttl_idx_1589 = mysrereset_mysreidx;
}
labeled_statement labeledstmt_3{
labeledstmt_38();
labeledstmt_39();
}
labeled_statement labeledstmt_47{
int<<8>> resmysre1279 = 0;
}
labeled_statement labeledstmt_46{
int<<8>> resmysre = 0;
}
labeled_statement labeledstmt_45{
int<<8>> countermysre = 0;
}
labeled_statement labeledstmt_44{
int<<8>> memop_synthesized_meta_varmysre = 0;
}
labeled_statement labeledstmt_43{
int<<8>> g_synthesized_meta_varmysre = 0;
}
labeled_statement labeledstmt_42{
int<<8>> f_synthesized_meta_varmysre = 0;
}
labeled_statement labeledstmt_41{
int<<32>> mysreidx = 0;
}
labeled_statement labeledstmt_40{
int<<1>> ansmysre = 1;
}
labeled_statement labeledstmt_4{
labeledstmt_40();
labeledstmt_41();
labeledstmt_42();
labeledstmt_43();
labeledstmt_44();
labeledstmt_45();
labeledstmt_46();
labeledstmt_47();
generate DNS_packet_out(DNS_packet_fwd_sip,DNS_packet_fwd_cip,DNS_packet_fwd_smac,DNS_packet_fwd_cmac,DNS_packet_fwd_ttl);
}
labeled_statement labeledstmt_5{

}
labeled_statement labeledstmt_6{

}
labeled_statement labeledstmt_48{
Sys.invalidate.mysrereset(mysrereset_mysreidx);
}
labeled_statement labeledstmt_7{
labeledstmt_48();
}
labeled_statement labeledstmt_49{
assigned_var_mysrefst_ttl_idx_1589 = mysreidx;
}
labeled_statement labeledstmt_8{
labeledstmt_49();
}
labeled_statement labeledstmt_9{

}
labeled_statement labeledstmt_50{
Array.update_complex(assigned_var_mysrefst_ttl,assigned_var_mysrefst_ttl_idx_1589,set_1582,0,0,0);
}
labeled_statement labeledstmt_10{
labeledstmt_50();
}
labeled_statement labeledstmt_51{
int<<32>> fst_ttl = Array.update_complex(assigned_var_mysrefst_ttl,assigned_var_mysrefst_ttl_idx_1589,re12351sdaCheckThenSet,DNS_packet_fwd_ttl,0,0);
}
labeled_statement labeledstmt_11{
labeledstmt_51();
}
labeled_statement labeledstmt_12{

}
labeled_statement labeledstmt_52{
int<<32>> if_precomp = fst_ttl-DNS_packet_fwd_ttl;
}
labeled_statement labeledstmt_13{
labeledstmt_52();
}
labeled_statement labeledstmt_14{

}
labeled_statement labeledstmt_54{
countermysre = countermysre<<1;
}
labeled_statement labeledstmt_53{
Sys.invalidate.DNS_packet_fwd(DNS_packet_fwd_sip,DNS_packet_fwd_cip,DNS_packet_fwd_smac,DNS_packet_fwd_cmac,DNS_packet_fwd_ttl);
}
labeled_statement labeledstmt_15{
labeledstmt_53();
labeledstmt_54();
}
labeled_statement labeledstmt_55{
int<<8>> to_immediate_tmp = countermysre<<1;
}
labeled_statement labeledstmt_16{
labeledstmt_53();
labeledstmt_55();
}
labeled_statement labeledstmt_17{

}
labeled_statement labeledstmt_56{
countermysre = 1+to_immediate_tmp;
}
labeled_statement labeledstmt_18{
labeledstmt_56();
}
labeled_statement labeledstmt_19{

}
labeled_statement labeledstmt_59{
f_synthesized_meta_varmysre = 173;
}
labeled_statement labeledstmt_58{
g_synthesized_meta_varmysre = 5;
}
labeled_statement labeledstmt_57{
memop_synthesized_meta_varmysre = 0;
}
labeled_statement labeledstmt_20{
labeledstmt_57();
labeledstmt_58();
labeledstmt_59();
}
labeled_statement labeledstmt_62{
f_synthesized_meta_varmysre = 243;
}
labeled_statement labeledstmt_61{
g_synthesized_meta_varmysre = 181;
}
labeled_statement labeledstmt_60{
memop_synthesized_meta_varmysre = 2;
}
labeled_statement labeledstmt_21{
labeledstmt_60();
labeledstmt_61();
labeledstmt_62();
}
labeled_statement labeledstmt_22{

}
labeled_statement labeledstmt_63{
mysre_idx_1590 = mysreidx;
}
labeled_statement labeledstmt_23{
labeledstmt_63();
}
labeled_statement labeledstmt_24{
labeledstmt_63();
}
labeled_statement labeledstmt_25{

}
labeled_statement labeledstmt_64{
Array.update_complex(mysre,mysre_idx_1590,set_1586,0,0,0);
}
labeled_statement labeledstmt_26{
labeledstmt_64();
}
labeled_statement labeledstmt_65{
resmysre1279 = Array.update_complex(mysre,mysre_idx_1590,mysrememop0,f_synthesized_meta_varmysre,g_synthesized_meta_varmysre,0);
}
labeled_statement labeledstmt_27{
labeledstmt_65();
}
labeled_statement labeledstmt_66{
resmysre1279 = Array.update_complex(mysre,mysre_idx_1590,mysrememop2,f_synthesized_meta_varmysre,g_synthesized_meta_varmysre,0);
}
labeled_statement labeledstmt_28{
labeledstmt_66();
}
labeled_statement labeledstmt_29{

}
labeled_statement labeledstmt_67{
ansmysre = 1;
}
labeled_statement labeledstmt_30{
labeledstmt_67();
}
labeled_statement labeledstmt_68{
ansmysre = 0;
}
labeled_statement labeledstmt_31{
labeledstmt_68();
}
labeled_statement labeledstmt_32{

}
labeled_statement labeledstmt_69{
recirc_mcid = recirc_mcid+1;
}
labeled_statement labeledstmt_33{
generate ttl_changes_found(0,0);
labeledstmt_69();
}
labeled_statement labeledstmt_34{

}
labeled_statement labeledstmt_35{
labeledstmt_69();
}