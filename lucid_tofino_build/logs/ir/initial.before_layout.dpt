entry event DNS_packet_fwd(int<<32>> DNS_packet_fwd_sip,int<<32>> DNS_packet_fwd_cip,int<<32>> DNS_packet_fwd_smac,int<<32>> DNS_packet_fwd_cmac,int<<32>> DNS_packet_fwd_ttl);
event DNS_packet_out(int<<32>> DNS_packet_out_sip,int<<32>> DNS_packet_out_cip,int<<32>> DNS_packet_out_smac,int<<32>> DNS_packet_out_cmac,int<<32>> DNS_packet_out_ttl);
event ttl_changes_found(int<<32>> ttl_changes_found_idx,int<<8>> ttl_changes_found_count);
global Array.t<<32>> assigned_var_mysrefst_ttl = Array.create(8);

global Array.t<<8>> mysre = Array.create(8);

memop mysrememop0(int<<8>> memval,int<<8>> f,int<<8>> g)
 {{
b1=(b1,memval+g<2);
b2=(b2,g==8)
cell1=(b1||b2 -> 8|memval), (!b1&&!b2 -> f+8)
cell2=None, None

ret=(true -> cell1)
}}
memop mysrememop2(int<<8>> memval,int<<8>> f,int<<8>> g)
 {{
b1=(b1,memval+f<8);
b2=(b2,memval+0<1)
cell1=(b1||b2 -> g^^memval), (!b1&&!b2 -> f+8)
cell2=None, None

ret=(true -> cell1)
}}
event mysrereset(int<<32>> mysrereset_mysreidx);
handle DNS_packet_out(int<<32>> DNS_packet_out_sip,int<<32>> DNS_packet_out_cip,int<<32>> DNS_packet_out_smac,int<<32>> DNS_packet_out_cmac,int<<32>> DNS_packet_out_ttl) {

}
handle ttl_changes_found(int<<32>> ttl_changes_found_idx,int<<8>> ttl_changes_found_count) {

}
handle mysrereset(int<<32>> mysrereset_mysreidx) {

}
handle DNS_packet_fwd(int<<32>> DNS_packet_fwd_sip,int<<32>> DNS_packet_fwd_cip,int<<32>> DNS_packet_fwd_smac,int<<32>> DNS_packet_fwd_cmac,int<<32>> DNS_packet_fwd_ttl) {

}
// shared locals:
int<<32>> mysre_idx_1590;
int<<32>> assigned_var_mysrefst_ttl_idx_1589;
// MAIN HANDLER 
handler main(...){
// Stage 0
match event_id with 
| 2 -> {
Sys.invalidate.DNS_packet_out(DNS_packet_out_sip,DNS_packet_out_cip,DNS_packet_out_smac,DNS_packet_out_cmac,DNS_packet_out_ttl);
}
| 3 -> {
Sys.invalidate.ttl_changes_found(ttl_changes_found_idx,ttl_changes_found_count);
}
| 4 -> {
assigned_var_mysrefst_ttl_idx_1589 = mysrereset_mysreidx;
Array.update_complex(assigned_var_mysrefst_ttl,assigned_var_mysrefst_ttl_idx_1589,set_1582,0,0,0);
mysre_idx_1590 = mysrereset_mysreidx;
Array.update_complex(mysre,mysre_idx_1590,set_1586,0,0,0);
Sys.invalidate.mysrereset(mysrereset_mysreidx);
}
| 1 -> {
int<<1>> ansmysre = 1;
int<<32>> mysreidx = 0;
int<<8>> f_synthesized_meta_varmysre = 0;
int<<8>> g_synthesized_meta_varmysre = 0;
int<<8>> memop_synthesized_meta_varmysre = 0;
assigned_var_mysrefst_ttl_idx_1589 = mysreidx;
int<<32>> fst_ttl = Array.update_complex(assigned_var_mysrefst_ttl,assigned_var_mysrefst_ttl_idx_1589,re12351sdaCheckThenSet,DNS_packet_fwd_ttl,0,0);
int<<8>> countermysre = 0;
int<<32>> if_precomp = fst_ttl-DNS_packet_fwd_ttl;
match if_precomp with 
| 0 -> {
countermysre = countermysre<<1;
}
| _ -> {
int<<8>> to_immediate_tmp = countermysre<<1;
countermysre = 1+to_immediate_tmp;
}
int<<8>> resmysre = 0;
match countermysre with 
| 1 -> {
f_synthesized_meta_varmysre = 173;
g_synthesized_meta_varmysre = 5;
memop_synthesized_meta_varmysre = 0;
}
| 0 -> {
f_synthesized_meta_varmysre = 243;
g_synthesized_meta_varmysre = 181;
memop_synthesized_meta_varmysre = 2;
}
| _ -> {

}
int<<8>> resmysre1279 = 0;
match memop_synthesized_meta_varmysre with 
| 0 -> {
mysre_idx_1590 = mysreidx;
resmysre1279 = Array.update_complex(mysre,mysre_idx_1590,mysrememop0,f_synthesized_meta_varmysre,g_synthesized_meta_varmysre,0);
}
| 2 -> {
mysre_idx_1590 = mysreidx;
resmysre1279 = Array.update_complex(mysre,mysre_idx_1590,mysrememop2,f_synthesized_meta_varmysre,g_synthesized_meta_varmysre,0);
}
| _ -> {

}
match resmysre1279 with 
| 181 -> {
ansmysre = 1;
}
| _ -> {
ansmysre = 0;
}
match ansmysre with 
| 1 -> {
recirc_mcid = recirc_mcid+1;
generate ttl_changes_found(0,0);
}
| _ -> {

}
recirc_mcid = recirc_mcid+1;
generate DNS_packet_out(DNS_packet_fwd_sip,DNS_packet_fwd_cip,DNS_packet_fwd_smac,DNS_packet_fwd_cmac,DNS_packet_fwd_ttl);
Sys.invalidate.DNS_packet_fwd(DNS_packet_fwd_sip,DNS_packet_fwd_cip,DNS_packet_fwd_smac,DNS_packet_fwd_cmac,DNS_packet_fwd_ttl);
}}
memop re12351sdaCheckThenSet(int<<32>> memval,int<<32>> newval,int<<32>> unused_1588)
 {{
b1=None;
b2=(mbool_1587,memval==0)
cell1=None, None
cell2=(mbool_1587 -> newval), (!mbool_1587 -> memval)

ret=(true -> cell2)
}}
memop set_1586(int<<8>> mem_val_1585,int<<8>> new_val_1583,int<<8>> unused_1584)
 {{
b1=None;
b2=None
cell1=(true -> new_val_1583), None
cell2=None, None

ret=None
}}
memop set_1582(int<<32>> mem_val_1581,int<<32>> new_val_1579,int<<32>> unused_1580)
 {{
b1=None;
b2=None
cell1=(true -> new_val_1579), None
cell2=None, None

ret=None
}}