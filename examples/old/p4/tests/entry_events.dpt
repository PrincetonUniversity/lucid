// Array.get, getm, set, setm tests

// packet events
event packetin (int client_ip, int server_ip);
// exit events
event continue (int src_ip, int dst_ip);

// persistent state
global stg1_client = new Array<<32>>(1024);

/* get_functions */
memop ident(int stored_val, int unused) {
    return stored_val;
}

memop trans(int stored_val, int new_val) {
    return new_val;
}

// packet from remote server to local client
handle packetin(int server_ip, int client_ip) {
    int<<32>> h1h = hash<<32>>(1094, server_ip);
    /* check if the key is in the first hash table stage */
    if (server_ip == 1){
    // int stg1_client_stored = Array.getm(stg1_client, h1h, get_cmp, client_ip);        
    int stg1_client_stored = Array.getm(stg1_client, h1h, trans, client_ip);        
    }    
    else {
        if (server_ip == 2){
            // Array.setm(stg1_client, h1h, get_cmp, client_ip);        
            Array.setm(stg1_client, h1h, trans, client_ip);        
        }
    }
    generate continue(server_ip, client_ip);
}