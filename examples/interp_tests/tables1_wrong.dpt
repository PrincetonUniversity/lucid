// NOTE: THIS PROGRAM SHOULD FAIL TYPE CHECKING!
// tables1 with an ordering error (ftbl used twice)
type res_t = {
  int val;
  bool is_hit;
}

// action res_t hit_acn(int x)(int a) {
//   return {val = x; is_hit = true};
// }
action_constr hit_acn(int x) = {
  return action res_t anon(int a) {
    return {val = x; is_hit = true};
  };
};

// action res_t miss_acn()(int a) {
//   return {val = a; is_hit = false};
// }
action_constr miss_acn() = {
  return action res_t anon(int a) {
    return {val = a; is_hit = false};
  };
};

table_type ftbl_t = {
  key_type: (int)
  arg_type: (int)
  ret_type: res_t
}
global ftbl_t ftbl = table_create<ftbl_t>((hit_acn, miss_acn), 1024, miss_acn());

event do_match(int<32> s) {
  int a = 1000;
  res_t tbl_out = table_match(ftbl, (s), (a));

  printf("return of table match: %d", tbl_out#val);
  if (tbl_out#is_hit) {
    printf ("table HIT.");
    res_t tbl_out2 = table_match(ftbl, (1), (2));
  }
  else {
    printf ("table MISS. Installing hit_acn(3) for current key. ");
    table_install(ftbl, {(s) -> hit_acn(3)});
  }
}

event do_install(int<32> v, int<32> m) {
  printf("installing entry: (%d &&& %d)", v, m);
  table_multi_install(ftbl, {(v) -> hit_acn(2); (v &&& m) -> hit_acn(3)});
 }
