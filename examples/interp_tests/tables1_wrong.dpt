// NOTE: THIS PROGRAM SHOULD FAIL TYPE CHECKING!
// tables1 with an ordering error (ftbl used twice)
type res_t = {
  int val;
  bool is_hit;
}

action res_t hit_acn(int x)(int a) {
  return {val = x; is_hit = true};
}

action res_t miss_acn(int unused)(int a) {
  return {val = a; is_hit = false};
}

global Table.t<<int, int, int, res_t>> ftbl = Table.create(1024, [hit_acn; miss_acn], miss_acn, 0);

event do_match(int<32> s) {
  int a = 1000;
  res_t tbl_out = Table.lookup(ftbl, (s), (a));

  printf("return of table match: %d", tbl_out#val);
  if (tbl_out#is_hit) {
    printf ("table HIT.");
    res_t tbl_out2 = Table.lookup(ftbl, (1), (2));
  }
  else {
    printf ("table MISS. Installing hit_acn(3) for current key. ");
    Table.install<unordered>(ftbl, s, hit_acn, 3);

  }
}

event do_install(int<32> v, int<32> m) {
  printf("installing entry: (%d &&& %d)", v, m);
  Table.install<unordered>(ftbl, v, hit_acn, 2);
  Table.install_ternary<unordered>(ftbl, v, m, hit_acn, 3);
}