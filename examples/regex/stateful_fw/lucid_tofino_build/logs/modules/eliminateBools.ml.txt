---eliminateBools.ml log---
-----before boolean elimination-------
entry event ip_pkt(int<<48>> ip_pkt_eth_0,int<<48>> ip_pkt_eth_1,int<<16>> ip_pkt_eth_2,int<<8>> ip_pkt_ip_0,int<<8>> ip_pkt_ip_1,int<<16>> ip_pkt_ip_2,int<<16>> ip_pkt_ip_3,int<<16>> ip_pkt_ip_4,int<<8>> ip_pkt_ip_5,int<<8>> ip_pkt_ip_6,int<<16>> ip_pkt_ip_7,int<<32>> ip_pkt_src,int<<32>> ip_pkt_dst);

memop re12351sdaCheckThenSet(int<<32>> memval,int<<32>> newval)
 {if memval==0 then newval else memval}

global Array.t<<32>> assigned_var_allowedstart_time = Array.create(4096);


global Array.t<<8>> allowed = Array.create(4096);


memop allowedmemop0(int<<8>> memval,int<<8>> f,int<<8>> g)
 {{
b1=(b1,0<0);
b2=(b2,memval+f>8)
cell1=(b1&&b2 -> 0|0), (true -> g|8)
cell2=None, None

ret=(true -> cell1)
}}

memop allowedmemop1(int<<8>> memval,int<<8>> f,int<<8>> g)
 {{
b1=(b1,memval+f<8);
b2=(b2,memval+g==8)
cell1=(b1||b2 -> f|0), (true -> 0|memval)
cell2=None, None

ret=(true -> cell1)
}}

handle ip_pkt(int<<48>> ip_pkt_eth_0,int<<48>> ip_pkt_eth_1,int<<16>> ip_pkt_eth_2,int<<8>> ip_pkt_ip_0,int<<8>> ip_pkt_ip_1,int<<16>> ip_pkt_ip_2,int<<16>> ip_pkt_ip_3,int<<16>> ip_pkt_ip_4,int<<8>> ip_pkt_ip_5,int<<8>> ip_pkt_ip_6,int<<16>> ip_pkt_ip_7,int<<32>> ip_pkt_src,int<<32>> ip_pkt_dst) {
int<<48>> ip_pkt_input_arg_0 = ip_pkt_eth_0;
int<<48>> ip_pkt_input_arg_1 = ip_pkt_eth_1;
int<<16>> ip_pkt_input_arg_2 = ip_pkt_eth_2;
int<<8>> ip_pkt_input_arg_3 = ip_pkt_ip_0;
int<<8>> ip_pkt_input_arg_4 = ip_pkt_ip_1;
int<<16>> ip_pkt_input_arg_5 = ip_pkt_ip_2;
int<<16>> ip_pkt_input_arg_6 = ip_pkt_ip_3;
int<<16>> ip_pkt_input_arg_7 = ip_pkt_ip_4;
int<<8>> ip_pkt_input_arg_8 = ip_pkt_ip_5;
int<<8>> ip_pkt_input_arg_9 = ip_pkt_ip_6;
int<<16>> ip_pkt_input_arg_10 = ip_pkt_ip_7;
int<<32>> ip_pkt_input_arg_11 = ip_pkt_src;
int<<32>> ip_pkt_input_arg_12 = ip_pkt_dst;
int<<32>> idx = (int<<32>>)hash<<12>>(19,ip_pkt_src,ip_pkt_dst);
bool ansallowed = true;
int<<32>> allowedidx = idx;
int<<8>> f_synthesized_meta_varallowed = 0;
int<<8>> g_synthesized_meta_varallowed = 0;
int<<8>> memop_synthesized_meta_varallowed = 0;
int<<32>> precompute = Sys.time();
int<<32>> start_time = Array.setm(assigned_var_allowedstart_time,allowedidx,re12351sdaCheckThenSet,precompute);
int<<32>> pred0allowed = Sys.time()-start_time-10000;
int<<8>> pred1allowed = ip_pkt_ip_1-1;
match (pred0allowed,pred1allowed) with 
| 0b1*******************************,0 -> {
f_synthesized_meta_varallowed = 1;
g_synthesized_meta_varallowed = 27;
memop_synthesized_meta_varallowed = 1;
}
| 0b1*******************************,_ -> {
f_synthesized_meta_varallowed = 1;
g_synthesized_meta_varallowed = 213;
memop_synthesized_meta_varallowed = 1;
}
| _,0 -> {
f_synthesized_meta_varallowed = 62;
g_synthesized_meta_varallowed = 8;
memop_synthesized_meta_varallowed = 1;
}
| _,_ -> {
f_synthesized_meta_varallowed = 56;
g_synthesized_meta_varallowed = 54;
memop_synthesized_meta_varallowed = 0;
}
int<<8>> resallowed = 0;
match memop_synthesized_meta_varallowed with 
| 0 -> {
resallowed = Array.update_complex(allowed,allowedidx,allowedmemop0,f_synthesized_meta_varallowed,g_synthesized_meta_varallowed,0);
}
| 1 -> {
resallowed = Array.update_complex(allowed,allowedidx,allowedmemop1,f_synthesized_meta_varallowed,g_synthesized_meta_varallowed,0);
}
| _ -> {

}
match resallowed with 
| 1 -> {
ansallowed = true;
}
| _ -> {
ansallowed = false;
}
if (ansallowed) {
generate_port (100, ip_pkt(ip_pkt_input_arg_0,ip_pkt_input_arg_1,ip_pkt_input_arg_2,ip_pkt_input_arg_3,ip_pkt_input_arg_4,ip_pkt_input_arg_5,ip_pkt_input_arg_6,ip_pkt_input_arg_7,ip_pkt_input_arg_8,ip_pkt_input_arg_9,ip_pkt_input_arg_10,ip_pkt_input_arg_11,ip_pkt_input_arg_12));
} 
}
-----end before boolean elimination-------
-----after phase 1: non-immediate elimination-------
entry event ip_pkt(int<<48>> ip_pkt_eth_0,int<<48>> ip_pkt_eth_1,int<<16>> ip_pkt_eth_2,int<<8>> ip_pkt_ip_0,int<<8>> ip_pkt_ip_1,int<<16>> ip_pkt_ip_2,int<<16>> ip_pkt_ip_3,int<<16>> ip_pkt_ip_4,int<<8>> ip_pkt_ip_5,int<<8>> ip_pkt_ip_6,int<<16>> ip_pkt_ip_7,int<<32>> ip_pkt_src,int<<32>> ip_pkt_dst);

memop re12351sdaCheckThenSet(int<<32>> memval,int<<32>> newval)
 {if memval==0 then newval else memval}

global Array.t<<32>> assigned_var_allowedstart_time = Array.create(4096);


global Array.t<<8>> allowed = Array.create(4096);


memop allowedmemop0(int<<8>> memval,int<<8>> f,int<<8>> g)
 {{
b1=(b1,0<0);
b2=(b2,memval+f>8)
cell1=(b1&&b2 -> 0|0), (true -> g|8)
cell2=None, None

ret=(true -> cell1)
}}

memop allowedmemop1(int<<8>> memval,int<<8>> f,int<<8>> g)
 {{
b1=(b1,memval+f<8);
b2=(b2,memval+g==8)
cell1=(b1||b2 -> f|0), (true -> 0|memval)
cell2=None, None

ret=(true -> cell1)
}}

handle ip_pkt(int<<48>> ip_pkt_eth_0,int<<48>> ip_pkt_eth_1,int<<16>> ip_pkt_eth_2,int<<8>> ip_pkt_ip_0,int<<8>> ip_pkt_ip_1,int<<16>> ip_pkt_ip_2,int<<16>> ip_pkt_ip_3,int<<16>> ip_pkt_ip_4,int<<8>> ip_pkt_ip_5,int<<8>> ip_pkt_ip_6,int<<16>> ip_pkt_ip_7,int<<32>> ip_pkt_src,int<<32>> ip_pkt_dst) {
int<<48>> ip_pkt_input_arg_0 = ip_pkt_eth_0;
int<<48>> ip_pkt_input_arg_1 = ip_pkt_eth_1;
int<<16>> ip_pkt_input_arg_2 = ip_pkt_eth_2;
int<<8>> ip_pkt_input_arg_3 = ip_pkt_ip_0;
int<<8>> ip_pkt_input_arg_4 = ip_pkt_ip_1;
int<<16>> ip_pkt_input_arg_5 = ip_pkt_ip_2;
int<<16>> ip_pkt_input_arg_6 = ip_pkt_ip_3;
int<<16>> ip_pkt_input_arg_7 = ip_pkt_ip_4;
int<<8>> ip_pkt_input_arg_8 = ip_pkt_ip_5;
int<<8>> ip_pkt_input_arg_9 = ip_pkt_ip_6;
int<<16>> ip_pkt_input_arg_10 = ip_pkt_ip_7;
int<<32>> ip_pkt_input_arg_11 = ip_pkt_src;
int<<32>> ip_pkt_input_arg_12 = ip_pkt_dst;
int<<32>> idx = (int<<32>>)hash<<12>>(19,ip_pkt_src,ip_pkt_dst);
bool ansallowed = true;
int<<32>> allowedidx = idx;
int<<8>> f_synthesized_meta_varallowed = 0;
int<<8>> g_synthesized_meta_varallowed = 0;
int<<8>> memop_synthesized_meta_varallowed = 0;
int<<32>> precompute = Sys.time();
int<<32>> start_time = Array.setm(assigned_var_allowedstart_time,allowedidx,re12351sdaCheckThenSet,precompute);
int<<32>> pred0allowed = Sys.time()-start_time-10000;
int<<8>> pred1allowed = ip_pkt_ip_1-1;
match (pred0allowed,pred1allowed) with 
| 0b1*******************************,0 -> {
f_synthesized_meta_varallowed = 1;
g_synthesized_meta_varallowed = 27;
memop_synthesized_meta_varallowed = 1;
}
| 0b1*******************************,_ -> {
f_synthesized_meta_varallowed = 1;
g_synthesized_meta_varallowed = 213;
memop_synthesized_meta_varallowed = 1;
}
| _,0 -> {
f_synthesized_meta_varallowed = 62;
g_synthesized_meta_varallowed = 8;
memop_synthesized_meta_varallowed = 1;
}
| _,_ -> {
f_synthesized_meta_varallowed = 56;
g_synthesized_meta_varallowed = 54;
memop_synthesized_meta_varallowed = 0;
}
int<<8>> resallowed = 0;
match memop_synthesized_meta_varallowed with 
| 0 -> {
resallowed = Array.update_complex(allowed,allowedidx,allowedmemop0,f_synthesized_meta_varallowed,g_synthesized_meta_varallowed,0);
}
| 1 -> {
resallowed = Array.update_complex(allowed,allowedidx,allowedmemop1,f_synthesized_meta_varallowed,g_synthesized_meta_varallowed,0);
}
| _ -> {

}
match resallowed with 
| 1 -> {
ansallowed = true;
}
| _ -> {
ansallowed = false;
}
if (ansallowed) {
generate_port (100, ip_pkt(ip_pkt_input_arg_0,ip_pkt_input_arg_1,ip_pkt_input_arg_2,ip_pkt_input_arg_3,ip_pkt_input_arg_4,ip_pkt_input_arg_5,ip_pkt_input_arg_6,ip_pkt_input_arg_7,ip_pkt_input_arg_8,ip_pkt_input_arg_9,ip_pkt_input_arg_10,ip_pkt_input_arg_11,ip_pkt_input_arg_12));
} 
}
-----end after phase 1: non-immediate elimination-------
-----after phase 2: if expression cannonization-------
entry event ip_pkt(int<<48>> ip_pkt_eth_0,int<<48>> ip_pkt_eth_1,int<<16>> ip_pkt_eth_2,int<<8>> ip_pkt_ip_0,int<<8>> ip_pkt_ip_1,int<<16>> ip_pkt_ip_2,int<<16>> ip_pkt_ip_3,int<<16>> ip_pkt_ip_4,int<<8>> ip_pkt_ip_5,int<<8>> ip_pkt_ip_6,int<<16>> ip_pkt_ip_7,int<<32>> ip_pkt_src,int<<32>> ip_pkt_dst);

memop re12351sdaCheckThenSet(int<<32>> memval,int<<32>> newval)
 {if memval==0 then newval else memval}

global Array.t<<32>> assigned_var_allowedstart_time = Array.create(4096);


global Array.t<<8>> allowed = Array.create(4096);


memop allowedmemop0(int<<8>> memval,int<<8>> f,int<<8>> g)
 {{
b1=(b1,0<0);
b2=(b2,memval+f>8)
cell1=(b1&&b2 -> 0|0), (true -> g|8)
cell2=None, None

ret=(true -> cell1)
}}

memop allowedmemop1(int<<8>> memval,int<<8>> f,int<<8>> g)
 {{
b1=(b1,memval+f<8);
b2=(b2,memval+g==8)
cell1=(b1||b2 -> f|0), (true -> 0|memval)
cell2=None, None

ret=(true -> cell1)
}}

handle ip_pkt(int<<48>> ip_pkt_eth_0,int<<48>> ip_pkt_eth_1,int<<16>> ip_pkt_eth_2,int<<8>> ip_pkt_ip_0,int<<8>> ip_pkt_ip_1,int<<16>> ip_pkt_ip_2,int<<16>> ip_pkt_ip_3,int<<16>> ip_pkt_ip_4,int<<8>> ip_pkt_ip_5,int<<8>> ip_pkt_ip_6,int<<16>> ip_pkt_ip_7,int<<32>> ip_pkt_src,int<<32>> ip_pkt_dst) {
int<<48>> ip_pkt_input_arg_0 = ip_pkt_eth_0;
int<<48>> ip_pkt_input_arg_1 = ip_pkt_eth_1;
int<<16>> ip_pkt_input_arg_2 = ip_pkt_eth_2;
int<<8>> ip_pkt_input_arg_3 = ip_pkt_ip_0;
int<<8>> ip_pkt_input_arg_4 = ip_pkt_ip_1;
int<<16>> ip_pkt_input_arg_5 = ip_pkt_ip_2;
int<<16>> ip_pkt_input_arg_6 = ip_pkt_ip_3;
int<<16>> ip_pkt_input_arg_7 = ip_pkt_ip_4;
int<<8>> ip_pkt_input_arg_8 = ip_pkt_ip_5;
int<<8>> ip_pkt_input_arg_9 = ip_pkt_ip_6;
int<<16>> ip_pkt_input_arg_10 = ip_pkt_ip_7;
int<<32>> ip_pkt_input_arg_11 = ip_pkt_src;
int<<32>> ip_pkt_input_arg_12 = ip_pkt_dst;
int<<32>> idx = (int<<32>>)hash<<12>>(19,ip_pkt_src,ip_pkt_dst);
bool ansallowed = true;
int<<32>> allowedidx = idx;
int<<8>> f_synthesized_meta_varallowed = 0;
int<<8>> g_synthesized_meta_varallowed = 0;
int<<8>> memop_synthesized_meta_varallowed = 0;
int<<32>> precompute = Sys.time();
int<<32>> start_time = Array.setm(assigned_var_allowedstart_time,allowedidx,re12351sdaCheckThenSet,precompute);
int<<32>> pred0allowed = Sys.time()-start_time-10000;
int<<8>> pred1allowed = ip_pkt_ip_1-1;
match (pred0allowed,pred1allowed) with 
| 0b1*******************************,0 -> {
f_synthesized_meta_varallowed = 1;
g_synthesized_meta_varallowed = 27;
memop_synthesized_meta_varallowed = 1;
}
| 0b1*******************************,_ -> {
f_synthesized_meta_varallowed = 1;
g_synthesized_meta_varallowed = 213;
memop_synthesized_meta_varallowed = 1;
}
| _,0 -> {
f_synthesized_meta_varallowed = 62;
g_synthesized_meta_varallowed = 8;
memop_synthesized_meta_varallowed = 1;
}
| _,_ -> {
f_synthesized_meta_varallowed = 56;
g_synthesized_meta_varallowed = 54;
memop_synthesized_meta_varallowed = 0;
}
int<<8>> resallowed = 0;
match memop_synthesized_meta_varallowed with 
| 0 -> {
resallowed = Array.update_complex(allowed,allowedidx,allowedmemop0,f_synthesized_meta_varallowed,g_synthesized_meta_varallowed,0);
}
| 1 -> {
resallowed = Array.update_complex(allowed,allowedidx,allowedmemop1,f_synthesized_meta_varallowed,g_synthesized_meta_varallowed,0);
}
| _ -> {

}
match resallowed with 
| 1 -> {
ansallowed = true;
}
| _ -> {
ansallowed = false;
}
if (ansallowed==true) {
generate_port (100, ip_pkt(ip_pkt_input_arg_0,ip_pkt_input_arg_1,ip_pkt_input_arg_2,ip_pkt_input_arg_3,ip_pkt_input_arg_4,ip_pkt_input_arg_5,ip_pkt_input_arg_6,ip_pkt_input_arg_7,ip_pkt_input_arg_8,ip_pkt_input_arg_9,ip_pkt_input_arg_10,ip_pkt_input_arg_11,ip_pkt_input_arg_12));
} 
}
-----end after phase 2: if expression cannonization-------
-----after phase 3: immediate elimination-------
entry event ip_pkt(int<<48>> ip_pkt_eth_0,int<<48>> ip_pkt_eth_1,int<<16>> ip_pkt_eth_2,int<<8>> ip_pkt_ip_0,int<<8>> ip_pkt_ip_1,int<<16>> ip_pkt_ip_2,int<<16>> ip_pkt_ip_3,int<<16>> ip_pkt_ip_4,int<<8>> ip_pkt_ip_5,int<<8>> ip_pkt_ip_6,int<<16>> ip_pkt_ip_7,int<<32>> ip_pkt_src,int<<32>> ip_pkt_dst);

memop re12351sdaCheckThenSet(int<<32>> memval,int<<32>> newval)
 {if memval==0 then newval else memval}

global Array.t<<32>> assigned_var_allowedstart_time = Array.create(4096);


global Array.t<<8>> allowed = Array.create(4096);


memop allowedmemop0(int<<8>> memval,int<<8>> f,int<<8>> g)
 {{
b1=(b1,0<0);
b2=(b2,memval+f>8)
cell1=(b1&&b2 -> 0|0), (true -> g|8)
cell2=None, None

ret=(true -> cell1)
}}

memop allowedmemop1(int<<8>> memval,int<<8>> f,int<<8>> g)
 {{
b1=(b1,memval+f<8);
b2=(b2,memval+g==8)
cell1=(b1||b2 -> f|0), (true -> 0|memval)
cell2=None, None

ret=(true -> cell1)
}}

handle ip_pkt(int<<48>> ip_pkt_eth_0,int<<48>> ip_pkt_eth_1,int<<16>> ip_pkt_eth_2,int<<8>> ip_pkt_ip_0,int<<8>> ip_pkt_ip_1,int<<16>> ip_pkt_ip_2,int<<16>> ip_pkt_ip_3,int<<16>> ip_pkt_ip_4,int<<8>> ip_pkt_ip_5,int<<8>> ip_pkt_ip_6,int<<16>> ip_pkt_ip_7,int<<32>> ip_pkt_src,int<<32>> ip_pkt_dst) {
int<<48>> ip_pkt_input_arg_0 = ip_pkt_eth_0;
int<<48>> ip_pkt_input_arg_1 = ip_pkt_eth_1;
int<<16>> ip_pkt_input_arg_2 = ip_pkt_eth_2;
int<<8>> ip_pkt_input_arg_3 = ip_pkt_ip_0;
int<<8>> ip_pkt_input_arg_4 = ip_pkt_ip_1;
int<<16>> ip_pkt_input_arg_5 = ip_pkt_ip_2;
int<<16>> ip_pkt_input_arg_6 = ip_pkt_ip_3;
int<<16>> ip_pkt_input_arg_7 = ip_pkt_ip_4;
int<<8>> ip_pkt_input_arg_8 = ip_pkt_ip_5;
int<<8>> ip_pkt_input_arg_9 = ip_pkt_ip_6;
int<<16>> ip_pkt_input_arg_10 = ip_pkt_ip_7;
int<<32>> ip_pkt_input_arg_11 = ip_pkt_src;
int<<32>> ip_pkt_input_arg_12 = ip_pkt_dst;
int<<32>> idx = (int<<32>>)hash<<12>>(19,ip_pkt_src,ip_pkt_dst);
int<<1>> ansallowed = 1;
int<<32>> allowedidx = idx;
int<<8>> f_synthesized_meta_varallowed = 0;
int<<8>> g_synthesized_meta_varallowed = 0;
int<<8>> memop_synthesized_meta_varallowed = 0;
int<<32>> precompute = Sys.time();
int<<32>> start_time = Array.setm(assigned_var_allowedstart_time,allowedidx,re12351sdaCheckThenSet,precompute);
int<<32>> pred0allowed = Sys.time()-start_time-10000;
int<<8>> pred1allowed = ip_pkt_ip_1-1;
match (pred0allowed,pred1allowed) with 
| 0b1*******************************,0 -> {
f_synthesized_meta_varallowed = 1;
g_synthesized_meta_varallowed = 27;
memop_synthesized_meta_varallowed = 1;
}
| 0b1*******************************,_ -> {
f_synthesized_meta_varallowed = 1;
g_synthesized_meta_varallowed = 213;
memop_synthesized_meta_varallowed = 1;
}
| _,0 -> {
f_synthesized_meta_varallowed = 62;
g_synthesized_meta_varallowed = 8;
memop_synthesized_meta_varallowed = 1;
}
| _,_ -> {
f_synthesized_meta_varallowed = 56;
g_synthesized_meta_varallowed = 54;
memop_synthesized_meta_varallowed = 0;
}
int<<8>> resallowed = 0;
match memop_synthesized_meta_varallowed with 
| 0 -> {
resallowed = Array.update_complex(allowed,allowedidx,allowedmemop0,f_synthesized_meta_varallowed,g_synthesized_meta_varallowed,0);
}
| 1 -> {
resallowed = Array.update_complex(allowed,allowedidx,allowedmemop1,f_synthesized_meta_varallowed,g_synthesized_meta_varallowed,0);
}
| _ -> {

}
match resallowed with 
| 1 -> {
ansallowed = 1;
}
| _ -> {
ansallowed = 0;
}
if (ansallowed==1) {
generate_port (100, ip_pkt(ip_pkt_input_arg_0,ip_pkt_input_arg_1,ip_pkt_input_arg_2,ip_pkt_input_arg_3,ip_pkt_input_arg_4,ip_pkt_input_arg_5,ip_pkt_input_arg_6,ip_pkt_input_arg_7,ip_pkt_input_arg_8,ip_pkt_input_arg_9,ip_pkt_input_arg_10,ip_pkt_input_arg_11,ip_pkt_input_arg_12));
} 
}
-----end after phase 3: immediate elimination-------
