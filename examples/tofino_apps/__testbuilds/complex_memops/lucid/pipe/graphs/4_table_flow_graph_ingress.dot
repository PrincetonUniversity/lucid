digraph ingress {
cond_4 [ shape=record, style="filled", fillcolor=cornsilk, label="md.dptMeta.eventType == 0\l\l
 "];
entry_table_0 [ shape=record, style="filled", fillcolor=cornsilk, label="entry_table_0\l\l
M:\l
 hdr.ip.$valid\l
 ig_intr_md.ingress_port\l
\lR:\l
 ig_intr_md.ingress_port\l
 hdr.ip.src_addr\l
 hdr.ip.dst_addr\l
\lW:\l
 md.dptMeta.eventType\l
 md.ip_in.igr_port\l
 md.ip_in.src\l
 md.ip_in.dst\l
 "];
cond_5 [ shape=record, style="filled", fillcolor=cornsilk, label="md.dptMeta.eventType != 0\l\l
 "];
dpt_1_merged_tbl_0 [ shape=record, style="filled", fillcolor=cornsilk, label="dpt_1_merged_tbl_0\l\l
M:\l
 md.dptMeta.eventType\l
\lW:\l
 a1_out_0\l
 "];
ciL2Fwd_tiWire [ shape=record, style="filled", fillcolor=cornsilk, label="ciL2Fwd_tiWire\l\l
M:\l
 ig_intr_md.ingress_port\l
\lR:\l
 ig_intr_md.ingress_port\l
\lW:\l
 ig_intr_md_for_tm.ucast_egress_port\l
 "];
dpt_2_merged_tbl_0 [ shape=record, style="filled", fillcolor=cornsilk, label="dpt_2_merged_tbl_0\l\l
M:\l
 md.dptMeta.eventType\l
\lR:\l
 md.ip_in.src\l
\lW:\l
 a2_out_0\l
 "];
dpt_3_merged_tbl_0 [ shape=record, style="filled", fillcolor=cornsilk, label="dpt_3_merged_tbl_0\l\l
M:\l
 md.dptMeta.eventType\l
\lR:\l
 a1_out_0\l
 a2_out_0\l
 md.ip_in.igr_port\l
\lW:\l
 md.ip_out.src\l
 md.ip_out.dst\l
 md.dptMeta.exitEventType\l
 ig_intr_md_for_tm.ucast_egress_port\l
 "];
dpt_0_lucid_return_table_0 [ shape=record, style="filled", fillcolor=cornsilk, label="dpt_0_lucid_return_table_0\l\l
M:\l
 md.dptMeta.eventType\l
 md.dptMeta.eventsCount\l
 md.dptMeta.exitEventType\l
\lR:\l
 md.dptMeta.eventsCount\l
\lW:\l
 ig_intr_md_for_dprsr.drop_ctl\l
 ig_intr_md_for_tm.mcast_grp_a\l
 hdr.ethernet.ether_type\l
 hdr.lucid_footer.$valid\l
 hdr.ev_out_flags.$valid\l
 "];
cond_6 [ shape=record, style="filled", fillcolor=cornsilk, label="md.dptMeta.exitEventType != 0\l\l
 "];
exit_table_0 [ shape=record, style="filled", fillcolor=cornsilk, label="exit_table_0\l\l
M:\l
 md.dptMeta.exitEventType\l
\lR:\l
 md.ip_out.src\l
 md.ip_out.dst\l
\lW:\l
 hdr.ip.src_addr\l
 hdr.ip.dst_addr\l
 "];
    PARSER -> cond_4
    cond_4 -> entry_table_0
    PARSER -> cond_4
    cond_4 -> cond_5
    entry_table_0 -> cond_5
    cond_5 -> dpt_1_merged_tbl_0
    cond_5 -> ciL2Fwd_tiWire
    ciL2Fwd_tiWire -> DEPARSER
    dpt_1_merged_tbl_0 -> dpt_2_merged_tbl_0
    dpt_2_merged_tbl_0 -> dpt_3_merged_tbl_0
    dpt_3_merged_tbl_0 -> dpt_0_lucid_return_table_0
    dpt_0_lucid_return_table_0 -> cond_6
    cond_6 -> exit_table_0
    cond_6 -> DEPARSER
    exit_table_0 -> DEPARSER
}
