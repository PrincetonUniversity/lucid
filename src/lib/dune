(include_subdirs unqualified)
(library
 (name dpt)
 (public_name dpt)
 (libraries
   batteries
   zarith
   ANSITerminal
   compiler-libs.common
   core
   ounit2
   ocamlgraph
   yojson
   z3
   angstrom
   fileutils
   pyml
   )
 (modules
   cmdline
   console
   id
   cid
   input
   integer
   span
   printing
   corePrinting
   parser
   lexer
   syntax
   syntaxUtils
   coreSyntax
   coreZ3
   collections
   typer
   typerZ3
   typerUnify
   typerUtil
   typerInstGen
   typerModules
   memops
   wellformed
   functionInlining
   functionInliningSpecialCase
   sizeInlining
   renaming
   globalArgElimination
   explicitReturns
   moduleAliasing
   recordElimination
   moduleElimination
   tupleElimination
   vectorElimination
   eStmtElimination
   symbolicElimination
   replaceUserTys
   partialInterpretation
   constInlining
   linerate
   frontendPipeline
   midendPipeline
   syntaxToCore
   interp
   interpCore
   pipeline
   preprocess
   interpSpec
   interpState
   arrays
   counters
   pairArrays
   system
   events
   builtins
   consts
   TQVar
   OGSyntax
   LLConfig
   LLSyntax
   DFSyntax
   pipeSyntax
   SLSyntax
   backendLogging
   poplPatches
   eliminateEqRangeOps
   addDefaultBranches
   precomputeArgs
   normalizeBools
   eliminateBools
   optimizeSimpleCalls
   eliminateValueCasts
   eliminateExterns
   normalizeInts
   singleAssignment
   partialSingleAssignment
   uniqueSpans
   uniqueIds
   interpHelpers
   LLTranslate
   LLConstants
   LLContext
   LLEvent
   LLArray
   LLPairArray
   LLOp
   LLSys
   LLMemop
   LLScheduler
   LLStartup
   LLValidate
   printUtils
   miscUtils
   debugPrint
   registerAllocation
   mergeUtils
   ruleSolve
   branchElimination
   dataFlow
   liveliness
   p4tContext
   p4tPrint
   p4tMgrPrint
   p4tStats
   linkP4
   packageTofinoApp
   ioUtils
   logIr
   P4ExternSyntax
   JsonBlocks
   JsonEntryTriggers
   JsonExitActions
   )
 (preprocess
    (staged_pps ppx_import visitors.ppx ppx_deriving.show ppx_deriving.std ppx_string_interpolation))
)
(subdir frontend
   (menhir (modules Parser))
   (ocamllex (modules Lexer))
)
