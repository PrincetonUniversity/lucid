#!/bin/bash
# insert user control code into a lucid.py file, generated by the compiler 
# for tofino control. Example usage in example/utils/generator makefile

# Usage: link_control.sh <user_customization.py> <lucid.py>

# Check if the correct number of arguments is provided.
if [ "$#" -ne 2 ]; then
    echo "Usage: $0 <user_customization.py> <lucid.py>"
    exit 1
fi

user_file="$1"
target_file="$2"

# Create a temporary file to store the modified content.
temp_file=$(mktemp)

# Read the target file and process it.
awk -v user_file="$user_file" '
BEGIN {
    # Read the user customization file into a variable.
    while ((getline line < user_file) > 0) {
        user_content = user_content line "\n"
    }
    close(user_file)
}

/#begin inserted user-function/,/#end inserted user-function/ {
    # Skip lines between the markers.
    next
}

# When we find the line containing "main()", insert the user content before printing "main()".
/^main\(\)\s*$/ {
    # Insert the user customization content before the main() call.
    print "#begin inserted user-function"
    print user_content
    print "#end inserted user-function"
    # Now print the "main()" line.
    print
    # Proceed to the next line.
    next
}

{
    # Print the current line.
    print
}
' "$target_file" > "$temp_file"

# Replace the target file with the modified content.
mv "$temp_file" "$target_file"